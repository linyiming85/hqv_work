package com.springapp.mvc;

import org.springframework.http.HttpRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.naming.NamingException;
import javax.naming.directory.DirContext;
import javax.naming.directory.InitialDirContext;
import javax.naming.Context;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponseWrapper;
import java.util.HashMap;
import java.util.Hashtable;

@Controller
@RequestMapping("/welcome")
public class HelloController {
	@RequestMapping("/index")
	public String printWelcome(ModelMap model) {
		model.addAttribute("message", "Hello world!");
		return "index";
	}
    @RequestMapping("/submit")
    public String checkUser(HttpServletRequest request){
        String userName=request.getParameter("userId");
        String psw=request.getParameter("psword");
        boolean isUser=this.validateUser(userName,psw,"10.1.1.10","389");

        System.out.println("isUser:"+isUser);
        return "main";
    }

    @SuppressWarnings("unchecked")
    private boolean validateUser(String username, String password, String host, String port)
    {

        Hashtable env = new Hashtable();
        DirContext ctx;
        String user = "ailk\\"+username;
        String passwd = password;
        env.put(Context.SECURITY_AUTHENTICATION,"simple");
        env.put(Context.SECURITY_PRINCIPAL, user);
        env.put(Context.SECURITY_CREDENTIALS, passwd);
        String url = new String("ldap://"+host+":"+port);
        env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
        env.put(Context.PROVIDER_URL,url);
        try {
            ctx = new InitialDirContext(env);
            if (null == ctx)
            {
                ctx.close();
                return false;
            }
            else
            {
                ctx.close();
                return true;
            }
        }
        catch(NamingException err)
        {
            return false;
        }
    }
}